diff --git a/src/app/favicon.ico b/src/app/favicon.ico
index 0796c00..718d6fe 100644
Binary files a/src/app/favicon.ico and b/src/app/favicon.ico differ
diff --git a/src/app/layout.js b/src/app/layout.js
index 5ba763a..7ab5057 100644
--- a/src/app/layout.js
+++ b/src/app/layout.js
@@ -27,9 +27,15 @@ export const metadata = {
     siteName: "INDOATLANTIC",
     images: [
       {
-        url: "https://indoatlantic.ca/favicon.png",
-        width: 1200,
-        height: 630,
+        url: "./favicon.png",
+        width: 800,
+        height: 600,
+      },
+      {
+        url: "./favicon.png",
+        width: 1800,
+        height: 1600,
+        alt: "My custom alt",
       },
     ],
     locale: "en_US",
@@ -53,9 +59,20 @@ export default function RootLayout({ children }) {
       <html lang="en">
         <Providers>
           <head>
-            <link rel="shortcut icon" href="/favicon.ico" />
-            <link rel="icon" type="image/x-icon" href="/favicon.ico" />
-            <link rel="apple-touch-icon" href="/favicon.png" />
+            <link rel="shortcut icon" href="./favicon.png" />
+            <link rel="apple-touch-icon" href="./favicon.png" />
+            <link
+              rel="icon"
+              type="image/png"
+              sizes="32x32"
+              href="./favicon.png"
+            />
+            <link
+              rel="icon"
+              type="image/png"
+              sizes="16x16"
+              href="./favicon.png"
+            />
           </head>
           <body>
             <div className="main-wrapper">
diff --git a/src/app/let-us-know/page.jsx b/src/app/let-us-know/page.jsx
index 87122d8..7026a30 100644
--- a/src/app/let-us-know/page.jsx
+++ b/src/app/let-us-know/page.jsx
@@ -4,8 +4,6 @@ import React, { useState } from "react";
 import Link from "next/link";
 import { toast } from "react-toastify";
 
-
-
 const LetUsKnow = () => {
   const [isSubmitting, setIsSubmitting] = useState(false);
   const [selectedReason, setSelectedReason] = useState("");
diff --git a/src/components/HomePage/header/page.jsx b/src/components/HomePage/header/page.jsx
index 18290e1..612cdc7 100644
--- a/src/components/HomePage/header/page.jsx
+++ b/src/components/HomePage/header/page.jsx
@@ -53,17 +53,6 @@ const Header = ({ parms }) => {
    const [isMenuOpen, setIsMenuOpen] = useState(false);
    const [mobileCategories,setMobileCategories] = useState(false)
     const [dropdownState, setDropdownState] = useState(false);
-  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
-  // const dropdownRef = useRef(null);
-
-  const toggleDropdown = () => {
-    setIsDropdownOpen(!isDropdownOpen);
-  };
-
-  const closeDropdown = () => {
-    setIsDropdownOpen(false);
-  };
-
   // useEffect(() => {
   //   const settings = localStorage.getItem("settings");
   //   setLogo(JSON.parse(settings?.logo));
@@ -182,7 +171,7 @@ useEffect(() => {
 
   const handleMobileMenuItemClick = () => {
     // Close both mobile dropdown and main mobile menu
-    setTimeout(() => setDrops(false), 300);
+    onhandleCloseMenu();
 setMobileDropdown(false)
     // handleDropdownItemClick();
   };
@@ -293,25 +282,75 @@ setMobileDropdown(false)
  };
 
 
- const [isSmallScreen, setIsSmallScreen] = useState(false);
-
- useEffect(() => {
-   const handleResize = () => {
-     setIsSmallScreen(window.innerWidth <= 768); // Adjust the width as needed
-   };
-
-   window.addEventListener('resize', handleResize);
-   handleResize(); // Call initially to set the state based on the initial screen size
-
-   return () => window.removeEventListener('resize', handleResize);
- }, []);
-
   // Call the function to set up the event listener
 
   return (
     <header className="header w-full">
       <style jsx>{`
-          `}</style>
+        /* Mobile Dropdown */
+        .submenu {
+          display: none;
+          position: static;
+          background: transparent;
+          border: none;
+          padding-left: 15px;
+        }
+
+        .submenu.show {
+          display: block !important;
+        }
+
+        /* Desktop Dropdown */
+        .dropdown-menu {
+          border: 0;
+          box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
+          margin-top: 10px;
+        }
+
+        .dropdown-item {
+          padding: 8px 20px;
+          transition: all 0.3s;
+        }
+
+        .dropdown-item:hover {
+          background: #f8f9fa;
+        }
+
+        @media (max-width: 991px) {
+          .submenu {
+            position: relative;
+            width: 100%;
+            box-shadow: none;
+          }
+
+          .dropdown-item {
+            padding: 10px 15px;
+          }
+        }
+
+        .mobile-business-item {
+          list-style: none;
+          position: relative;
+        }
+
+        .mobile-business-link {
+          display: block;
+          text-decoration: none;
+        }
+
+        .mobile-business-link-content {
+          display: flex;
+          align-items: center;
+          gap: 8px;
+          padding: 12px 24px;
+          color: #333;
+          transition: background 0.2s ease;
+        }
+
+        .mobile-business-link-content:hover {
+          background: #f8f9fa;
+        }
+      `}</style>
       <div className="" style={{ marginLeft: "3px", marginRight: "10px" }}>
         <div className=" w-full">
           <nav className="navbar navbar-expand-lg header-nav w-full">
@@ -336,74 +375,32 @@ setMobileDropdown(false)
                 </Link>
               </div>
               <ul className="main-nav">
-                <li className={`custom-dropdown ${isDropdownOpen ? 'open' : ''}`} ref={dropdownRef}>
-                  <Link
-                        className={`dropdown-item ${isSmallScreen ? `submenu ${dropdownState ? "show" : ""}` : ""}`}
-                    onClick={toggleDropdown}
-                    style={{
-                      background: 'none',
-                      border: 'none',
-                      cursor: 'pointer',
-                      fontSize: 'inherit',
-                      fontFamily: 'inherit',
-                      fontWeight: '600'
-                    }}
-                    href={"#"}
-                  >
-                    Categories
-                   
-                  </Link>
-                  <div className="category-dropdown-menu ">
-                    {websiteData?.businessCategories.map((item, index) => (
-                      <div key={index} className="category-dropdown-item-wrapper ">
-                        <Link
-                          className="dropdown-item"
-                          href={`/categories/${item.slug}`}
-                          onClick={() => {
-                            handleItemClick();
-                            closeDropdown();
-                          }}
-                        >
-                          {item.name}
-                        </Link>
-                      </div>
-                    ))}
-                  </div>
-                </li>
-                <li className="d-lg-none has-submenu">
+                <li className="has-submenu">
                   <a
-                    className="mobile-category-menu category-userlink"
+                    className="mobile-user-menu profile-userlink cocolorBlacklor"
                     onClick={(e) => {
                       e.preventDefault();
                       e.stopPropagation();
                       setMobileCategories(!mobileCategories);
                     }}
-                    href="#"
+                    href="/categories"
                   >
-                    <div className="category-info">
-                      <div className="category-info-left">
-                        <span className="category-name">Categories</span>
-                      </div>
-                      <i
-                        className={`feather-arrow-${
-                          mobileCategories ? "up" : "down"
-                        }`}
-                      ></i>
-                    </div>
+                    Categories
+                    <i
+                      className={`feather-arrow-${
+                        mobileCategories ? "up" : "down"
+                      }`}
+                    ></i>
                   </a>
                   <ul
-                    className={`category-submenu ${
-                      mobileCategories ? "show" : ""
-                    }`}
+                    className={`submenu ${mobileCategories ? "show" : ""}`}
+                    onClick={(e) => e.stopPropagation()}
                   >
                     {websiteData?.businessCategories.map((item, index) => (
                       <li key={index}>
                         <Link
+                          onClick={handleItemClick}
                           href={`/categories/${item.slug}`}
-                          onClick={() => {
-                            handleItemClick();
-                            setMobileCategories(false);
-                          }}
                         >
                           {item.name}
                         </Link>
@@ -411,6 +408,12 @@ setMobileDropdown(false)
                     ))}
                   </ul>
                 </li>
+                {/* <Categories activeMenu={parms} /> */}
+                {/*
+              <PagesMenu activeMenus={parms} />
+              <UserPagesMenu />
+              <BlogMenu activesMenus={parms} /> */}
+
                 <li>
                   <Link
                     href="/active-offers"
@@ -419,8 +422,7 @@ setMobileDropdown(false)
                     Active Offers{" "}
                   </Link>
                 </li>
-                {/*mobile business */}
-               
+                {/*mobile  business */}
                 {isLoggedIn && userType === 1 && (
                   <li className="d-lg-none has-submenu">
                     <a
@@ -439,151 +441,137 @@ setMobileDropdown(false)
                               authData.user.image
                                 ? `${process.env.NEXT_PUBLIC_BASE_URL}${authData?.user?.image}`
                                 : "/img/pngegg.png"
-                          }
-                          alt="User profile"
-                        />
-                        <span className="user-name">
-                          {authData.user?.name}
-                        </span>
+                            }
+                            alt="User profile"
+                          />
+                          <span className="user-name">
+                            {authData.user?.name}
+                          </span>
+                        </div>
+                        <i
+                          className={`feather-arrow-${
+                            dropdownState ? "up" : "down"
+                          }`}
+                        ></i>
                       </div>
-                      <i
-                        className={`feather-arrow-${
-                          dropdownState ? "up" : "down"
-                        }`}
-                      ></i>
-                    </div>
-                  </a>
-                  <ul
-                    className={`submenu ${dropdownState ? "show" : ""}`}
-                    onClick={(e) => e.stopPropagation()}
-                  >
-                    <li>
-                      <Link
-                        onClick={dropdownClickHandler}
-                        href={`/business-details/${slug}`}
-                      >
-                        My Account
-                      </Link>
-                    </li>
-                    <li>
-                      <Link
-                        onClick={dropdownClickHandler}
-                        href="/business-gallery"
-                      >
-                        Gallery
-                      </Link>
-                    </li>
-                    <li>
-                      <Link onClick={dropdownClickHandler} href="/my-offers">
-                        My Offers
-                      </Link>
-                    </li>
-                    <li>
-                      <Link
-                        onClick={dropdownClickHandler}
-                        href="/user/profile"
-                      >
-                        Profile
-                      </Link>
-                    </li>
-                    <li>
-                      <Link
-                        onClick={dropdownClickHandler}
-                        href="/change-password"
-                      >
-                        Change Password
-                      </Link>
-                    </li>
-                    <li>
-                      <Link
-                        onClick={(e) => {
-                          
-                          dropdownClickHandler();
-                          setShowDeleteModal(true);
-                        }}
-                        href="#"
-                      >
-                         Delete Account
-                      </Link>
-                    </li>
-                
-                  </ul>
-                </li>
-              )}
-              {/*mobile user */}
-              {isLoggedIn && userType === 2 && (
-                <li className="d-lg-none has-submenu">
-                  <a
-                    className="mobile-user-menu profile-userlink cocolorBlacklor"
-                    onClick={(e) => {
-                      e.preventDefault();
-                      e.stopPropagation();
-                      setDropdownState(!dropdownState);
-                    }}
-                    href="/categories"
-                  >
-                    <div className="user-info">
-                      <div className="user-info-left">
-                        <img
-                          src={
-                            authData.user.image
-                              ? `${process.env.NEXT_PUBLIC_BASE_URL}${authData?.user?.image}`
-                              : "/img/pngegg.png"
-                          }
-                          alt="User profile"
-                        />
-                        <span className="user-name">
-                          {authData.user?.name}
-                        </span>
+                    </a>
+                    <ul
+                      className={`submenu ${dropdownState ? "show" : ""}`}
+                      onClick={(e) => e.stopPropagation()}
+                    >
+                      <li>
+                        <Link
+                          onClick={dropdownClickHandler}
+                          href={`/business-details/${slug}`}
+                        >
+                          My Account
+                        </Link>
+                      </li>
+                      <li>
+                        <Link
+                          onClick={dropdownClickHandler}
+                          href="/business-gallery"
+                        >
+                          Gallery
+                        </Link>
+                      </li>
+                      <li>
+                        <Link onClick={dropdownClickHandler} href="/my-offers">
+                          My Offers
+                        </Link>
+                      </li>
+                      <li>
+                        <Link
+                          onClick={dropdownClickHandler}
+                          href="/user/profile"
+                        >
+                          Profile
+                        </Link>
+                      </li>
+                      <li>
+                        <Link
+                          onClick={dropdownClickHandler}
+                          href="/change-password"
+                        >
+                          Change Password
+                        </Link>
+                      </li>
+                      <li>
+                        <Link
+                          onClick={(e) => {
+                            e.preventDefault();
+                            setShowDeleteModal(true);
+                            handleItemClick();
+                          }}
+                          href="#"
+                        >
+                          Delete Account
+                        </Link>
+                      </li>
+                    </ul>
+                  </li>
+                )}
+                {/*mobile user */}
+                {isLoggedIn && userType === 2 && (
+                  <li className="d-lg-none has-submenu">
+                    <a
+                      className="mobile-user-menu profile-userlink cocolorBlacklor"
+                      onClick={(e) => {
+                        e.preventDefault();
+                        e.stopPropagation();
+                        setDropdownState(!dropdownState);
+                      }}
+                      href="/categories"
+                    >
+                      <div className="user-info">
+                        <div className="user-info-left">
+                          <img
+                            src={
+                              authData.user.image
+                                ? `${process.env.NEXT_PUBLIC_BASE_URL}${authData?.user?.image}`
+                                : "/img/pngegg.png"
+                            }
+                            alt="User profile"
+                          />
+                          <span className="user-name">
+                            {authData.user?.name}
+                          </span>
+                        </div>
+                        <i
+                          className={`feather-arrow-${
+                            dropdownState ? "up" : "down"
+                          }`}
+                        ></i>
                       </div>
-                      <i
-                        className={`feather-arrow-${
-                          dropdownState ? "up" : "down"
-                        }`}
-                      ></i>
-                    </div>
-                  </a>
-                  <ul
-                    className={`submenu ${dropdownState ? "show" : ""}`}
-                    onClick={(e) => e.stopPropagation()}
-                  >
-                    <li>
-                      <Link
-                        onClick={dropdownClickHandler}
-                        href="/user/profile"
-                      >
-                        Profile
-                      </Link>
-                    </li>
-                    <li>
-                      <Link
-                        onClick={dropdownClickHandler}
-                        href="/change-password"
-                      >
-                        Change Password
-                      </Link>
-                    </li>
-                    <li>
-                      <Link
-                        onClick={dropdownClickHandler}
-                        href="/user/notifications"
-                        
-                      >
-                        Notifications
-                      </Link>
+                    </a>
+                    <ul
+                      className={`submenu ${dropdownState ? "show" : ""}`}
+                      onClick={(e) => e.stopPropagation()}
+                    >
+                      <li>
+                        <Link
+                          onClick={dropdownClickHandler}
+                          href="/user/profile"
+                        >
+                          Profile
+                        </Link>
                       </li>
                       <li>
-                      <Link
-                        onClick={(e) => {
-                          e.preventDefault();
-                          setShowDeleteModal(true);
-                          handleItemClick();
-                        }}
-                        href="#"
-                      >
-                        Delete Account
-                      </Link>
-                    </li>
+                        <Link
+                          onClick={dropdownClickHandler}
+                          href="/change-password"
+                        >
+                          Change Password
+                        </Link>
+                      </li>
+                      <li>
+                        <Link
+                          onClick={dropdownClickHandler}
+                          href="/user/notifications"
+                        >
+                          Notifications
+                        </Link>
+                      </li>
                     </ul>
                   </li>
                 )}
@@ -671,6 +659,8 @@ setMobileDropdown(false)
                       onClick={() => setDrops(!drops)}
                       data-bs-toggle="dropdown"
                       aria-expanded="false"
+
+                      // className={`${change1===true ? 'dropdown-menu dropdown-menu-end show' : "dropdown-menu dropdown-menu-end"}`}
                     >
                       <img
                         src={
@@ -679,71 +669,78 @@ setMobileDropdown(false)
                         }
                         alt="User profile"
                       />
+
                       <span>{authData.user?.business?.name}</span>
                     </Link>
                     <div className="dropdown-menu dropdown-menu-end show">
+                      {/* <Link
+                        className="dropdown-item"
+                        href="/user/review"
+                        onClick={handleMobileMenuItemClick}
+                      >
+                        Review
+                      </Link> */}
+
                       <Link
                         className="dropdown-item"
                         href={`/business-details/${slug}`}
                         onClick={(e) => {
                           e.preventDefault();
-                          setTimeout(() => setDrops(false), 300);
-                          router.push(`/business-details/${slug}`);
+                          e.stopPropagation();
+                          router
+                            .push(`/business-details/${slug}`)
+                            .then(() => {
+                              // Optional: Close menu after successful navigation
+                              // onhandleCloseMenu();
+                              // setMobileDropdown(false);
+                            })
+                            .catch(() => router.refresh());
                         }}
                       >
-                        My Account
+                        My Account{" "}
                       </Link>
                       <Link
                         className="dropdown-item"
                         href="/business-gallery"
                         onClick={(e) => {
                           e.preventDefault();
-                          setTimeout(() => setDrops(false), 300);
-                          router.push("/business-gallery");
+                          e.stopPropagation();
+                          router
+                            .push("/business-gallery")
+                            .catch(() => router.refresh());
                         }}
                       >
-                        Gallery
+                        Gallery{" "}
                       </Link>
                       <Link
                         className="dropdown-item"
                         href="/my-offers"
-                        onClick={(e) => {
-                          e.preventDefault();
-                          setTimeout(() => setDrops(false), 300);
-                          router.push("/my-offers");
-                        }}
+                        onClick={handleMobileMenuItemClick}
                       >
-                        My Offers
+                        My Offers{" "}
                       </Link>
                       <Link
                         className="dropdown-item"
                         href="/user/profile"
-                        onClick={(e) => {
-                          e.preventDefault();
-                          setTimeout(() => setDrops(false), 300);
-                          router.push("/user/profile");
-                        }}
+                        onClick={handleMobileMenuItemClick}
                       >
                         Profile
                       </Link>
+
                       <Link
                         className="dropdown-item"
                         href="/change-password"
-                        onClick={(e) => {
-                          e.preventDefault();
-                          setTimeout(() => setDrops(false), 300);
-                          router.push("/change-password");
-                        }}
+                        onClick={handleMobileMenuItemClick}
                       >
-                        Change Password
+                        Change Password{" "}
                       </Link>
                       <Link
                         className="dropdown-item"
                         href="#"
                         onClick={(e) => {
                           e.preventDefault();
-                          setTimeout(() => setDrops(false), 300);
                           setShowDeleteModal(true);
+                          handleDropdownItemClick();
                         }}
                       >
                         Delete Account
@@ -751,13 +748,9 @@ setMobileDropdown(false)
                       <Link
                         className="dropdown-item"
                         href="#"
-                        onClick={(e) => {
-                          e.preventDefault();
-                          setTimeout(() => setDrops(false), 300);
-                          handleLogout(e);
-                        }}
+                        onClick={handleLogout}
                       >
-                        Signout
+                        Signout{" "}
                       </Link>
                     </div>
                   </li>
@@ -792,9 +785,7 @@ setMobileDropdown(false)
                         href="/user/profile"
                         className="dropdown-item"
                         onClick={(e) => {
-                          e.preventDefault();
-                          setTimeout(() => setDrops(false), 300);
-                         
+                          e.stopPropagation();
                           router.push("/user/profile");
                         }}
                       >
@@ -819,8 +810,8 @@ setMobileDropdown(false)
                         href="#"
                         onClick={(e) => {
                           e.preventDefault();
-                          setTimeout(() => setDrops(false), 300);
                           setShowDeleteModal(true);
+                          handleDropdownItemClick();
                         }}
                       >
                         Delete Account
diff --git a/src/styles/crista.css b/src/styles/crista.css
index fca3f12..a22a6f1 100644
--- a/src/styles/crista.css
+++ b/src/styles/crista.css
@@ -1,3 +1,5 @@
+
+
 ::-webkit-scrollbar {
   width: 3px;
   height: 4px;
@@ -839,18 +841,6 @@ body {
   display: none;
 }
 
-
-.nav-item.dropdown.has-submenu .submenu {
-  transition: opacity 0.3s ease, transform 0.3s ease;
-  opacity: 0;
-  transform: translateY(-10px);
-}
-
-.nav-item.dropdown.has-submenu .submenu.show {
-  opacity: 1;
-  transform: translateY(0);
-}
-
 /* TODO: ===============RESPONSIVE */
 
 /* @media (max-width: 640px) {
@@ -990,14 +980,3 @@ body {
   transition: all 0.15s ease-in;
   scrollbar-width: none;
 }
-
-.nav-item.dropdown.has-submenu .submenu {
-  transition: opacity 0.3s ease, transform 0.3s ease;
-  opacity: 0;
-  transform: translateY(-10px);
-}
-
-.nav-item.dropdown.has-submenu .submenu.show {
-  opacity: 1;
-  transform: translateY(0);
-}
diff --git a/src/styles/style.css b/src/styles/style.css
index 603bab4..8d427ba 100644
--- a/src/styles/style.css
+++ b/src/styles/style.css
@@ -48,241 +48,12 @@ Version      : 1.0
 39. Responsive
 
 ========================================*/
-/* Custom dropdown container */
-/* Category dropdown styles for larger screens */
-@media (min-width: 992px) {
-  .category-dropdown-menu {
-    min-width: 200px;
-    background: #fff;
-    border-radius: 5px;
-    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
-  }
-
-  .category-dropdown-item-wrapper {
-    /* padding: 8px 0; */
-    border-bottom: 1px solid #f0f0f0;
-  }
-
-  .category-dropdown-item-wrapper:last-child {
-    border-bottom: none;
-  }
-
-  .category-dropdown-item-wrapper .dropdown-item {
-    padding: 8px 20px;
-    display: block;
-    color: #2E3842;
-    transition: all 0.3s ease;
-  }
-
-  .category-dropdown-item-wrapper .dropdown-item:hover {
-    background-color: #f8f9fa;
-    padding-left: 25px;
-  }
-}
-/* Hide desktop dropdown on mobile */
-@media (max-width: 991px) {
-  .custom-dropdown {
-    display: none !important;
-  }
-}
-
-/* Show desktop dropdown on larger screens */
-@media (min-width: 992px) {
-  .d-lg-block {
-    display: block !important;
-  }
-}
-
-
-/* Add these mobile category styles */
-.mobile-category-menu {
-  padding: 10px 15px;
-  display: block;
-  position: relative;
-  color: #2E3842;
-}
-
-.category-info {
-  display: flex;
-  align-items: center;
-  justify-content: space-between;
-}
-
-.category-info-left {
-  display: flex;
-  align-items: center;
-  gap: 10px;
-}
-
-.category-name {
-  font-weight: 500;
-}
-
-.category-submenu {
-  display: none;
-  padding-left: 15px;
-  background: var(--secondary-color);
-  transition: all 0.3s ease;
-}
-
-.category-submenu.show {
-  display: block;
-}
-
-.category-submenu li a {
-  padding: 10px 15px;
-  display: block;
-  color: #2E3842;
-}
-
-/* Hide desktop dropdown on mobile */
-@media (max-width: 991px) {
-  .custom-dropdown .category-dropdown-menu {
-    display: none;
-  }
-}
-@media (min-width: 992px) {
-/* .custom-dropdown {
-  position: relative;
-  top:50%;
-} */
-
-/* Dropdown toggle button */
-/* .dropdown-toggle {
-  display: flex;
-  align-items: center;
-  justify-content: space-between;
- 
-  color: #333;
-  text-decoration: none;
-  cursor: pointer;
-  background: none;
-  border: none;
-  font-size: inherit;
-  font-family: inherit;
-} */
-/* 
-.dropdown-toggle:hover {
-  background-color: #f8f9fa;
-} */
-
-/* 
-.dropdown-toggle .arrow {
-  margin-left: 8px;
-  transition: transform 0.2s ease;
-} */
-
-/* Dropdown menu */
-/* .dropdown-menu {
-  position: absolute;
-  
-  background: white;
-  border: 1px solid #ddd;
-  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
-  padding: 10px 0;
-  display: none;
-  z-index: 1000;
-  top: 100%; 
-  width: 100vw;
-  max-width: 100vw; 
-  overflow: hidden; 
-} */
-
-.category-dropdown-menu {
-  position: absolute;
-   /* Center the dropdown */
- /* Adjust for centering */
-  background: white;
-  border: 1px solid #ddd;
-  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
-  padding: 10px 0;
-  display: none;
-  z-index: 1000;
-  top: 100%; /* Position below the toggle button */
-  width: 100vw; /* Full viewport width */
-  max-width: 100vw; /* Ensure it doesn't exceed viewport width */
-  overflow: hidden; /* Prevent overflow */
-}
-
-/* Dropdown item styles */
-/* .dropdown-item-wrapper {
-  width: 100%;
-  display: block;
-} */
-
-.category-dropdown-item-wrapper {
-  width: 100%;
-  display: block;
-}
-
-/* .dropdown-item {
-  width: 100%;
-  padding: 10px 20px;
-  color: #333;
-  text-decoration: none;
-  display: block;
-  white-space: nowrap;
-} */
-
-/* .dropdown-item:hover {
-  background-color: #f8f9fa;
-} */
-
-.category-dropdown-item {
-  width: 100%;
-  padding: 10px 20px;
-  color: #333;
-  text-decoration: none;
-  display: block;
-  white-space: nowrap;
-}
-
-.category-dropdown-item:hover {
-  background-color: #f8f9fa;
-}
-
-/* When dropdown is open */
-.custom-dropdown.open  .category-dropdown-menu {
-  display: block;
-}
-
-.custom-dropdown.open .arrow {
-  transform: rotate(180deg);
-}
-}
-
-/* Mobile styles */
-@media (max-width: 991.98px) {
-  .category-dropdown-menu {
-    position: absolute;
-    left: 0; /* Align to the left on mobile */
-    transform: none; /* Remove centering on mobile */
-    width: 100%; /* Full width on mobile */
-    max-width: 100%; /* Ensure it doesn't exceed parent width */
-  }
-  /* .dropdown-menu {
-    position: absolute;
-    left: 0; 
-    transform: none; 
-    width: 100%; 
-    max-width: 100%;  
-  } */
-}
-
 
 /*-----------------
      Custom Classes 
      
 /* Default Styles */
 
-
-
-
-
-
-
-
-
 @media (min-width:1024px)
 {
   .colorBlack{
@@ -1798,13 +1569,6 @@ table.dataTable thead .sorting_desc_disabled:after {
     7. Header
 -----------------------*/
 
-
-
-
-
-
-
-
 .header {
   background:#fbd89e;
   position: fixed;
@@ -1925,17 +1689,17 @@ table.dataTable thead .sorting_desc_disabled:after {
 .header-navbar-rht .dropdown-toggle::after {
   display: none;
 }
-.header-navbar-rht > li .dropdown-menu .dropdown-item.category-dropdown-item {
+.header-navbar-rht > li .dropdown-menu .dropdown-item {
   border-top: 1px solid #f0f0f0;
   padding: 10px 15px;
   font-size: 0.9375rem;
   font-weight: 600;
 }
-.header-navbar-rht > li .dropdown-menu .dropdown-item:first-child .category-dropdown-item:first-child {
+.header-navbar-rht > li .dropdown-menu .dropdown-item:first-child {
   border-top: 0;
   border-radius: 5px 5px 0 0;
 }
-.header-navbar-rht > li .dropdown-menu .dropdown-item:last-child .category-dropdown-item {
+.header-navbar-rht > li .dropdown-menu .dropdown-item:last-child {
   border-radius: 0 0 5px 5px;
 }
 .header-navbar-rht > li a.header-login:hover,
@@ -2086,14 +1850,14 @@ table.dataTable thead .sorting_desc_disabled:after {
   margin: 0;
   cursor: pointer;
 }
-.header-navbar-rht .dropdown-menu .category-dropdown-menu {
+.header-navbar-rht .dropdown-menu {
   min-width: 200px;
   padding: 0;
 }
-.header-navbar-rht .dropdown-menu .dropdown-item .category-dropdown-item {
+.header-navbar-rht .dropdown-menu .dropdown-item {
   padding: 7px 15px;
 }
-.header-navbar-rht .dropdown-menu .dropdown-item .category-dropdown-item {
+.header-navbar-rht .dropdown-menu .dropdown-item {
   -webkit-box-align: center;
   -ms-flex-align: center;
   align-items: center;
@@ -2103,7 +1867,7 @@ table.dataTable thead .sorting_desc_disabled:after {
   border-top: 1px solid #e3e3e3;
   padding: 10px 15px;
 }
-.header-navbar-rht .dropdown-menu .category-menu .category-dropdown-item:hover .dropdown-item:hover {
+.header-navbar-rht .dropdown-menu .dropdown-item:hover {
   color: #c10037;
 }
 .user-header {
@@ -2176,7 +1940,7 @@ table.dataTable thead .sorting_desc_disabled:after {
   border-radius: 8px;
   padding: 13px;
 }
-.flag-nav .dropdown-item .category-dropdown-item  img {
+.flag-nav .dropdown-item img {
   margin-right: 10px;
   border-radius: 50%;
 }
@@ -6975,20 +6739,11 @@ ul.tags {
 .dropdown-item {
   font-size: 14px;
 }
-
-.categroy-dropdown-item {
-  font-size: 14px;
-}
 .dropdown-item:focus,
 .dropdown-item:hover {
   color: #fff;
   background-color: #c10037;
 }
-.category-dropdown-item:focus,
-.category-dropdown-item:hover {
-  color: #fff;
-  background-color: #c10037;
-}
 .card-dropdown .select2-container--default .select2-selection--single {
   background-color: #fff;
   border: 1px solid #f1f1f1;
@@ -17952,7 +17707,7 @@ section.advertisement {
     margin-top: 0px !important;
   }
   .header-nav {
-    /* padding-left: 10px; */
+    padding-left: 10px;
     padding-right: 10px;
   }
   .header-navbar-rht > li.desc-list a > span {
